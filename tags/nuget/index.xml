<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nuget on Duane Newman</title>
    <link>https://duanenewman.net/tags/nuget/</link>
    <description>Recent content in nuget on Duane Newman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Duane Newman</copyright>
    <lastBuildDate>Mon, 29 Jul 2019 00:00:00 -0500</lastBuildDate><atom:link href="https://duanenewman.net/tags/nuget/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic Authentication with TFS Package Server</title>
      <link>https://duanenewman.net/blog/post/2019-07-29-basic-auth-with-tfs-package-server/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 -0500</pubDate>
      
      <guid>https://duanenewman.net/blog/post/2019-07-29-basic-auth-with-tfs-package-server/</guid>
      <description>I recently encountered some authentication issues connecting my Mac to the package service hosted on a client&amp;rsquo;s on-prem TFS server. The server is on a Windows domain and normally I access TFS from a windows VM that is joined to the domain. However, I&amp;rsquo;ve recently found myself on my Mac more often while working on one of their Xamarin mobile apps. This is when I began having problems.
The Problem The client has a couple NuGet packages hosted on the TFS server using the Package Management extension, and whenever I tried to do a NuGet restore I would run into authentication errors.</description>
    </item>
    
    <item>
      <title>Forcing a Specific Target Platform With PackageReference</title>
      <link>https://duanenewman.net/blog/post/forcing-a-specific-target-platform-with-packagereference/</link>
      <pubDate>Mon, 18 Mar 2019 00:00:00 -0500</pubDate>
      
      <guid>https://duanenewman.net/blog/post/forcing-a-specific-target-platform-with-packagereference/</guid>
      <description>In my last post about Using Prism with Xamarin.Forms &amp;amp; GTK# I showed how to force the use of .NET Standard reference when using NuGet with packages.config. You may prefer using the &amp;lt;PackageReference&amp;gt; tag in your csproj and found that those changes do not work for your scenario. This post will show you how to achieve the same override with PackageReference based projects.
Using Package Reference If you already have packages installed and are using a packages.</description>
    </item>
    
  </channel>
</rss>
