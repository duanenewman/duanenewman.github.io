<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding on Duane Newman</title>
    <link>https://duanenewman.net/categories/coding/</link>
    <description>Recent content in Coding on Duane Newman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Duane Newman</copyright>
    <lastBuildDate>Mon, 29 Jul 2019 00:00:00 -0500</lastBuildDate>
    <atom:link href="https://duanenewman.net/categories/coding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic Authentication with TFS Package Server</title>
      <link>https://duanenewman.net/blog/post/2019-07-29-basic-auth-with-tfs-package-server/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 -0500</pubDate>
      <guid>https://duanenewman.net/blog/post/2019-07-29-basic-auth-with-tfs-package-server/</guid>
      <description>I recently encountered some authentication issues connecting my Mac to the package service hosted on a client&amp;rsquo;s on-prem TFS server. The server is on a Windows domain and normally I access TFS from a windows VM that is joined to the domain. However, I&amp;rsquo;ve recently found myself on my Mac more often while working on one of their Xamarin mobile apps. This is when I began having problems.&#xA;The Problem The client has a couple NuGet packages hosted on the TFS server using the Package Management extension, and whenever I tried to do a NuGet restore I would run into authentication errors.</description>
    </item>
    <item>
      <title>A Better Way to Override References With PackageReference</title>
      <link>https://duanenewman.net/blog/post/a-better-way-to-override-references-with-packagereference/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 -0600</pubDate>
      <guid>https://duanenewman.net/blog/post/a-better-way-to-override-references-with-packagereference/</guid>
      <description>Recently, there was a new feature added to msbuild (working in Visual Studio 2019 15.9.9) that generates a variable for each package that contains the full path to the package version being used. All you have to do is add an attribute to each &amp;lt;PackageReference&amp;gt; you want need to work with.&#xA;There are just two changes to what we did before:&#xA;Add GeneratePathProperty attribute to &amp;lt;PackageReference&amp;gt; Switch to Pkg&amp;lt;Package_Name&amp;gt; variable in &amp;lt;HintPath&amp;gt; Step one is pretty simple, add the attribute GeneratePathProperty with a value of true:</description>
    </item>
    <item>
      <title>Forcing a Specific Target Platform With PackageReference</title>
      <link>https://duanenewman.net/blog/post/forcing-a-specific-target-platform-with-packagereference/</link>
      <pubDate>Mon, 18 Mar 2019 00:00:00 -0500</pubDate>
      <guid>https://duanenewman.net/blog/post/forcing-a-specific-target-platform-with-packagereference/</guid>
      <description>In my last post about Using Prism with Xamarin.Forms &amp;amp; GTK# I showed how to force the use of .NET Standard reference when using NuGet with packages.config. You may prefer using the &amp;lt;PackageReference&amp;gt; tag in your csproj and found that those changes do not work for your scenario. This post will show you how to achieve the same override with PackageReference based projects.&#xA;Using Package Reference If you already have packages installed and are using a packages.</description>
    </item>
    <item>
      <title>Using Prism With Xamarin.Forms &amp; GTK</title>
      <link>https://duanenewman.net/blog/post/using-prism-with-xamarin-forms-and-gtk/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 -0500</pubDate>
      <guid>https://duanenewman.net/blog/post/using-prism-with-xamarin-forms-and-gtk/</guid>
      <description>I&amp;rsquo;m working on project to replace my car radio with a custom digital dashboard. I&amp;rsquo;m building it on a RaspberryPi and would really like to use Xamarin.Forms and Prism, so I started out with adding a GTK# frontend to my Xamarin.Forms project.&#xA;Adding the GTK# Backend Project Before we can add the GTK# project we need to actually install the GTK# libraries. Head over to The Mono Project to download and run the GTK# for .</description>
    </item>
    <item>
      <title>Running PowerShell Scripts From C#</title>
      <link>https://duanenewman.net/blog/post/running-powershell-scripts-from-csharp/</link>
      <pubDate>Wed, 06 Mar 2019 00:00:00 -0600</pubDate>
      <guid>https://duanenewman.net/blog/post/running-powershell-scripts-from-csharp/</guid>
      <description>Sometimes the little things can trip up your code, even when you think you are doing all the right things. We recently ran into an issue with a utility that runs an included PowerShell script as part of it operation. When the app was first put into use it seemed to be fine. Recently, it was deployed into a folder with spaces in the name and it began to blow up.</description>
    </item>
    <item>
      <title>Concurrent Reads and Locked Writes with In-Memory Objects</title>
      <link>https://duanenewman.net/blog/post/concurrent-reads-and-locked-writes-with-in-memory-objects/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/concurrent-reads-and-locked-writes-with-in-memory-objects/</guid>
      <description>The Problem On a recent project one of our clients had implemented an in-memory cache of some high read, low write data. The ultimate solution they had was a List&amp;lt;T&amp;gt; that they could search against while periodically updating when the database was updated. The reads worked great and were incredibly fast. The trouble came when they started to implement the updates. This was in their API layer and so incoming calls were on multiple threads.</description>
    </item>
    <item>
      <title>Keeping Observable Collections Up To Date</title>
      <link>https://duanenewman.net/blog/post/keeping-observable-collections-up-to-date/</link>
      <pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/keeping-observable-collections-up-to-date/</guid>
      <description>One of the powerful capabilities we&amp;rsquo;ve learned to leverage when using the MVVM pattern for XAML based apps, whether for the desktop or mobile platforms, is data binding. Binding allows us to easily keep our View up to date with changes in the ViewModel. These bindings are typically pretty quick when not abused, but there are situations where they can become less than performant, causing visual anomalies such as flickering or even impacting general app performance.</description>
    </item>
    <item>
      <title>Better Unit Testing with IoC, DI, and Mocking</title>
      <link>https://duanenewman.net/blog/post/better-unit-testing-with-ioc-di-and-mocking/</link>
      <pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/better-unit-testing-with-ioc-di-and-mocking/</guid>
      <description>When you write code designed for dependency injection it can make testing easier.. But it can also make it seem more complex and add a lot of ceremony to creating your testable instances. I thought I would share some tips I use when setting up a new cross-platform mobile project with unit testing. We can take advantage of the same IoC container strategy to make instantiating the class we want to test less painful.</description>
    </item>
    <item>
      <title>Teach an old Type new tricks with Extension Methods</title>
      <link>https://duanenewman.net/blog/post/teach-an-old-type-new-tricks-with-extension-methods/</link>
      <pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/teach-an-old-type-new-tricks-with-extension-methods/</guid>
      <description>Extension methods are a great way to add functionality or integration for established types. Learn about some of the cool things that you can do without the need to subclass or modify a class directly. You can even use extension methods to supply specialized functionality that is only relevant in a particular situation or when also making use of another type or library. We&amp;rsquo;ll take a look at a few quick tricks and explore how you can get started with Extension Methods today.</description>
    </item>
    <item>
      <title>All I want for Christmas is a C# Build System</title>
      <link>https://duanenewman.net/blog/post/all-i-want-for-christmas-is-a-c-sharp-build-system/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/all-i-want-for-christmas-is-a-c-sharp-build-system/</guid>
      <description>Why So Jolly? This post is part of the The First C# Advent Calendar, celebrating all things C#. After you finish here check out the other great posts in the series.&#xA;A C# Build System I&amp;rsquo;ve used many tools over the years to manage builds of large .NET projects including custom BAT/CMD files, customer PowerShell scripts, NAnt, and of course MSBuild. While I&amp;rsquo;ve been happy with the solutions I provided with each of these I&amp;rsquo;ve always found them either awkward to extend or limiting in their extensibility and more recently I needed them to work on a Mac for building Xamarin projects.</description>
    </item>
    <item>
      <title>Bluff v1.1 hot off the presses</title>
      <link>https://duanenewman.net/blog/post/bluff-v11-hot-off-the-presses/</link>
      <pubDate>Sat, 26 Mar 2016 11:46:24 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/bluff-v11-hot-off-the-presses/</guid>
      <description>I had a little time today to work on Bluff, my extension for Sony Vegas Pro. Over the last couple weeks Iâ€™ve done several things to the project, including:&#xA;Converting the project to .NET 3.5 (from 2.0) Converting the UI to WPF (still a little cleanup to do on that UI, but it is a lot easier to work with now) Add a new command called Arrange Events By Created Timestamp that spaces the events out on the timeline relative to each others created timestamp Changed the Vegas DLL reference to a v8 dll (to provide better compatibility form Vegas Pro 8 â€“ 13) And last, but not least, I added a WIX based installer to the project If you just want grab the latest version jump over to the GitHub release page.</description>
    </item>
    <item>
      <title>Xamarin Build Errors: Please Install Package Xamarin.Android.Support.v4</title>
      <link>https://duanenewman.net/blog/post/xamarin-build-errors-please-install-package-xamarinandroidsupportv4/</link>
      <pubDate>Wed, 16 Mar 2016 08:45:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/xamarin-build-errors-please-install-package-xamarinandroidsupportv4/</guid>
      <description>I was out of active Xamarin development for a couple months and recently wanted to jump back in and work on a couple new project ideas. I fired up VS2015 and created a project. It was then that I realized I had not installed the official Xamarin tools since I got my new Surface Book. So I decided it was a good idea to install that latest Xamarin Tools before I did anything else.</description>
    </item>
    <item>
      <title>Bluff: An OSS Extension for Sony Vegas Pro</title>
      <link>https://duanenewman.net/blog/post/bluff-oss-extension-for-sony-vegas-pro/</link>
      <pubDate>Wed, 09 Mar 2016 08:30:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/bluff-oss-extension-for-sony-vegas-pro/</guid>
      <description>Yesterday, my business Alien Arc Technologies, LLC announced the release of version 1.0 of an open source project Iâ€™ve been tinkering on recently, called Bluff. This is my first OSS project and Iâ€™m excited to have created something that I hope others will find useful, and better yet, will contribute their own ideas to.&#xA;History The project came out of my own personal needs and interest. In 2015 I was introduced to the world of scuba diving and Iâ€™ve fallen totally in love with it.</description>
    </item>
    <item>
      <title>Xamarin Forms Windows Phone Deployment Tip #1</title>
      <link>https://duanenewman.net/blog/post/xamarin-forms-windows-phone-deployment-tip-1/</link>
      <pubDate>Tue, 17 Mar 2015 08:40:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/xamarin-forms-windows-phone-deployment-tip-1/</guid>
      <description>Here is a helpful tip if you are developing a mobile app using Xamarin Forms and targeting Windows Phone 8.0 (or if you are just writing a WP8.0 Silverlight based app). If you are ready to deploy and filling everything out online it is easier than it first seems. On the Windows Phone Dev Center you will find a helpful link to this article telling you to add some info to the Package.</description>
    </item>
    <item>
      <title>Getting your brandâ€™s Twitter timeline in your mobile app</title>
      <link>https://duanenewman.net/blog/post/getting-your-brands-twitter-timeline-in-your-mobile-app/</link>
      <pubDate>Tue, 03 Mar 2015 08:55:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/getting-your-brands-twitter-timeline-in-your-mobile-app/</guid>
      <description>Iâ€™m working on a demo app to show some simple functionality that can be done with Xamarin Forms. Iâ€™m using the opportunity to also make a business card app for myself (and ultimately for Alien Arc). The app has my picture, name, short bio, and other relevant information. This also seemed like a good place to tie in some of my various social network feeds. I quickly added a page that pulls my blog RSS feed and lists my recent posts.</description>
    </item>
    <item>
      <title>Why doesnâ€™t my code work in Xamarin.Forms?</title>
      <link>https://duanenewman.net/blog/post/why-doesnt-my-code-work-in-xamarinforms/</link>
      <pubDate>Mon, 10 Nov 2014 13:00:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/why-doesnt-my-code-work-in-xamarinforms/</guid>
      <description>If you have tried something in Xamarin.Forms that should work but didn&amp;rsquo;t, don&amp;rsquo;t worry you might not be going crazy (I can&amp;rsquo;t say for sure, I&amp;rsquo;m a programmer, not a psychologist).&#xA;I&amp;rsquo;ve been diving deeper into Xamarin.Forms over the last couple months while working on a small project we have as well as in preparation for my upcoming talk at St. Louis Days of .NET. Sometimes in the course of creating a sample project I write some code that I know should work and then watch the exceptions pop-up (or worse, see nothing at all) when I run it.</description>
    </item>
    <item>
      <title>Processing collections with LINQ using the Aggregate extension method</title>
      <link>https://duanenewman.net/blog/post/processing-collections-with-linq-using-the-aggregate-extension-method/</link>
      <pubDate>Wed, 14 Sep 2011 22:19:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/processing-collections-with-linq-using-the-aggregate-extension-method/</guid>
      <description>Everyone knows one of the easiest ways to process collections of objects is using foreach, it is much more elegant and less error prone (IMHO) than using a for (int x..) and looping by index. &amp;nbsp;However, sometimes you get forced into using the indexer to process a collection. &amp;nbsp;This usually happens when you need to look at the current object in context of the previous. &amp;nbsp;&#xA;The need to use the indexer and have code like obj[i] == obj[i -1] bugged me.</description>
    </item>
    <item>
      <title>Attaching to external DirectShow graphs using Graph Edit</title>
      <link>https://duanenewman.net/blog/post/attaching-to-external-directshow-graphs-using-graph-edit/</link>
      <pubDate>Wed, 14 Sep 2011 18:00:00 +0000</pubDate>
      <guid>https://duanenewman.net/blog/post/attaching-to-external-directshow-graphs-using-graph-edit/</guid>
      <description>In my day job I work on a product that does a lot of video work and in fact has a custom DirectShow player that gets all our video into WPF. &amp;nbsp;It plays multiple files all synchronized (a real challenge).&#xA;While looking into ways to improve performance I found myself needing to see how my filter graph was being built. &amp;nbsp;I did a little looking and found that creating an instance of DsROTEntry with a reference to the graph makes it available for external viewing.</description>
    </item>
  </channel>
</rss>
